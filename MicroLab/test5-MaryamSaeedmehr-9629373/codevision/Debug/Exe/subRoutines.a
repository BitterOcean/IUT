;#include "test5_lib.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;uint8_t counter = 0;
;uint8_t Stepper = Left;
;uint8_t duty_cycle;
;
;interrupt [TIM0_COMP] void timer0_comp_isr(void){
; 0002 0007 interrupt [20] void timer0_comp_isr(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0008   duty_cycle = PINA;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0002 0009   duty_cycle = (0.38 * (duty_cycle)) + 5;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0002 000A   duty_cycle = (duty_cycle * 2.56) - 1;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 000B   OCR0 = duty_cycle;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0002 000C }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void){
; 0002 000E interrupt [5] void timer2_ovf_isr(void){
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0002 000F   if (counter <= 50){
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0002 0010     unsigned char temp1 = PORTB.4;
; 0002 0011     unsigned char temp2 = PORTB.5;
; 0002 0012     unsigned char temp3 = PORTB.6;
; 0002 0013     unsigned char temp4 = PORTB.7;
; 0002 0014 
; 0002 0015     PORTB.4 = temp4;
;PCODE: $0000002F VOL: 0
;	temp1 -> Y+3
;	temp2 -> Y+2
;	temp3 -> Y+1
;	temp4 -> Y+0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0002 0016     PORTB.5 = temp1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0002 0017     PORTB.6 = temp2;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0002 0018     PORTB.7 = temp3;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0002 0019 
; 0002 001A     Stepper = Right;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0002 001B     PORTD.0 = 0;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0002 001C     PORTD.1 = 1;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0002 001D   }
;PCODE: $0000006A VOL: 0
; 0002 001E 
; 0002 001F   else if (counter>100 && counter <=150){
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0002 0020     unsigned char temp1 = PORTB.4;
; 0002 0021     unsigned char temp2 = PORTB.5;
; 0002 0022     unsigned char temp3 = PORTB.6;
; 0002 0023     unsigned char temp4 = PORTB.7;
; 0002 0024 
; 0002 0025     PORTB.4 = temp2;
;PCODE: $00000077 VOL: 0
;	temp1 -> Y+3
;	temp2 -> Y+2
;	temp3 -> Y+1
;	temp4 -> Y+0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0002 0026     PORTB.5 = temp3;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0002 0027     PORTB.6 = temp4;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0002 0028     PORTB.7 = temp1;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0002 0029 
; 0002 002A     Stepper = Left;
;PCODE: $000000AC VOL: 0
; 0002 002B     PORTD.0 = 1;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0002 002C     PORTD.1 = 0;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0002 002D   }
;PCODE: $000000B1 VOL: 0
; 0002 002E 
; 0002 002F   else{
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0002 0030     PORTD.0 = 0;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0002 0031     PORTD.1 = 0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0002 0032   }
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0002 0033 
; 0002 0034   if (counter==0 || counter==101){
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0002 0035     lcd_clear();
;PCODE: $000000C1 VOL: 0
; 0002 0036     lcd_gotoxy(0, 0);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0002 0037     lcd_puts("9000 (rpm)");
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0002 0038   }
; 0002 0039   else if (counter == 51){
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0002 003A     lcd_clear();
;PCODE: $000000CE VOL: 0
; 0002 003B     lcd_gotoxy(0, 0);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0002 003C     lcd_puts("0 (rpm)");
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0002 003D   }
; 0002 003E 
; 0002 003F   counter = (counter + 1) % 150;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0002 0040 }
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0

	.DSEG
_0x40028:
	.BYTE 0x13
;
;void subRoutine1(){
; 0002 0042 void subRoutine1(){

	.CSEG
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0002 0043   delay_ms(5000);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0002 0044 
; 0002 0045   // 10 % duty cycle (17 rpm)
; 0002 0046   TCNT0 = 0x00;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0002 0047   lcd_clear();
;PCODE: $000000E8 VOL: 0
; 0002 0048   lcd_puts("Duty Cycle = 10%");
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0002 0049   OCR0 = 0x1A;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0002 004A 
; 0002 004B   delay_ms(5000);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0002 004C 
; 0002 004D   // 30 % duty cycle (50 rpm)
; 0002 004E   TCNT0 = 0x00;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0002 004F   lcd_clear();
;PCODE: $000000F2 VOL: 0
; 0002 0050   lcd_puts("Duty Cycle = 30%");
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0002 0051   OCR0 = 0x4D;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0002 0052 
; 0002 0053   delay_ms(5000);
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0002 0054 
; 0002 0055   // 50 % duty cycle (84 rpm)
; 0002 0056   TCNT0 = 0x00;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0002 0057   lcd_clear();
;PCODE: $000000FC VOL: 0
; 0002 0058   lcd_puts("Duty Cycle = 50%");
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0002 0059   OCR0 = 0x80;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0002 005A 
; 0002 005B   delay_ms(5000);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0002 005C 
; 0002 005D   // 70 % duty cycle (116 rpm)
; 0002 005E   TCNT0 = 0x00;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0002 005F   lcd_clear();
;PCODE: $00000106 VOL: 0
; 0002 0060   lcd_puts("Duty Cycle = 70%");
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0002 0061   OCR0 = 0xB2;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0002 0062 
; 0002 0063   delay_ms(5000);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0002 0064 
; 0002 0065   // 90 % duty cycle (149 rpm)
; 0002 0066   TCNT0 = 0x00;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0002 0067   lcd_clear();
;PCODE: $00000110 VOL: 0
; 0002 0068   lcd_puts("Duty Cycle = 90%");
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0002 0069   OCR0 = 0xE5;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0002 006A }
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0

	.DSEG
_0x4002B:
	.BYTE 0x55
;
;void subRoutine3(){
; 0002 006C void subRoutine3(){

	.CSEG
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0002 006D   duty_cycle = PINA;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0002 006E   duty_cycle = (0.38 * (duty_cycle)) + 5;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0002 006F   duty_cycle = (duty_cycle * 2.56) - 1;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0002 0070   TCNT0 = 0x00;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0002 0071   OCR0 = duty_cycle;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0002 0072 }
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;
;void subRoutine4(){
; 0002 0074 void subRoutine4(){
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0002 0075   PORTB.4 = 1;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0002 0076   PORTB.5 = 0;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0002 0077   PORTB.6 = 0;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0002 0078   PORTB.7 = 0;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0002 0079 }
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
