;#include "test3Lib.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Variable definition -----------------------------------------------------
;unsigned char i; // for-loop variable
;unsigned char j; // for-loop variable
;unsigned char digit = '0'; // which key is pushed? (Interrupt)
;unsigned char newDigit; // used in subRoutine5
;flash unsigned char data_key[4][4] = {
;    // keypad data
;    {'0','1','2','3'},
;    {'4','5','6','7'},
;    {'8','9','A','B'},
;    {'C','D','E','F'}
;};
;char* covid = "Welcome to the online lab classes due to Corona disease";

	.DSEG
_0x40003:
	.BYTE 0x38
;char* lcd_screen = "0000000000000000"; /* used in subRoutine2
;for scrolling string. initialized with "0000000000000000" to
;not have problem with clearing the lcd. */
_0x40005:
	.BYTE 0x11
;uint8_t speed; // used in subRoutine5 (0-50 r)
;uint8_t time; // used in subRoutine5 (0-99 s)
;uint8_t weigt; // used in subRoutine5 (0-99 F)
;uint8_t temp; // used in subRoutine5 (20-80 C)
;char* result = "00000000000000000000000000000000"; // store the result of subRoutine5
_0x40006:
	.BYTE 0x21
;
;// Interrupt Handler ------------------------------
;interrupt [EXT_INT1] void ext_int0_isr(void){
; 0002 001A interrupt [3] void ext_int0_isr(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 001B     // External Interrupt 0 service routine
; 0002 001C     PORTC = 0x01;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0002 001D     for (i = 0; i < 4; i++){ //row
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0002 001E         PORTB = 1 << (i + 4); //portB.4 to portB.8 are rows
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0002 001F         for (j = 0; j < 4; j++){ //column
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0002 0020             if ((PINB&(1<<j))==(1<<j)){
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0002 0021                 if(data_key[i][j]!='F')
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0002 0022                     lcd_putchar(data_key[i][j]);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0002 0023                 digit = data_key[i][j];
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0002 0024                 newDigit = 1;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0002 0025             }
; 0002 0026         }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0002 0027     }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0002 0028     PORTC = 0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0002 0029     PORTB = 0xFF;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0002 002A }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;
;// SubRoutines Implementation -----------------------------------------------
;void subRoutine1(){
; 0002 002D void subRoutine1(){
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0002 002E     lcd_clear();
;PCODE: $00000065 VOL: 0
; 0002 002F     lcd_puts(myName);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0002 0030     lcd_gotoxy(line2x,line2y); // go to next line
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0002 0031     lcd_puts(stdNO);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0002 0032     delay_ms(1500);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0002 0033 }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0

	.DSEG
_0x40010:
	.BYTE 0x19
;
;void subRoutine2(char* str){
; 0002 0035 void subRoutine2(char* str){

	.CSEG
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0002 0036     lcd_clear();
;PCODE: $00000076 VOL: 0
;	*str -> Y+0
;PCODE: $00000077 VOL: 0
; 0002 0037     for (i = 0; i <= strlen(str); i++){
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0002 0038         delay_ms(100);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0002 0039         lcd_clear();
;PCODE: $00000085 VOL: 0
; 0002 003A         strncpy(lcd_screen,str + i,16);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0002 003B         lcd_puts(lcd_screen);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0002 003C     }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0002 003D }
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;
;void subRoutine3(){
; 0002 003F void subRoutine3(){
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0002 0040     while (1){
;PCODE: $00000099 VOL: 0
; 0002 0041         for (i = 0; i < 4; i++){ //row
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0002 0042             PORTB = 1 << (i + 4); //portB.4 to portB.8 are rows
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0002 0043             for (j = 0; j < 4; j++){ //column
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0002 0044                 if ((PINB&(1<<j))==(1<<j)){
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0002 0045                     lcd_clear();
;PCODE: $000000BB VOL: 0
; 0002 0046                     lcd_putchar(data_key[i][j]);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0002 0047                     delay_ms(100);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0002 0048                     if(data_key[i][j]=='F'){ //End condition
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0002 0049                         delay_ms(700);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0002 004A                         subRoutine2(endSub3);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0002 004B                         return;
;PCODE: $000000D9 VOL: 0
; 0002 004C                     }
; 0002 004D                 }
;PCODE: $000000DA VOL: 0
; 0002 004E             }
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0002 004F         }
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0002 0050     }
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0002 0051 }
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0

	.DSEG
_0x4001F:
	.BYTE 0x33
;
;void subRoutine4(){
; 0002 0053 void subRoutine4(){

	.CSEG
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0002 0054     PORTB = 0xFF;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0002 0055 }
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;
;void subRoutine5(){
; 0002 0057 void subRoutine5(){
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0002 0058     // Speed -----------------------------------
; 0002 0059     newDigit = 0;
;PCODE: $000000F0 VOL: 0
; 0002 005A     lcd_clear();
;PCODE: $000000F1 VOL: 0
; 0002 005B     lcd_puts(SPEED);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0002 005C     speed = 0;
;PCODE: $000000F5 VOL: 0
; 0002 005D     while(1){
;PCODE: $000000F6 VOL: 0
; 0002 005E         if((digit!='F') && newDigit){
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0002 005F             newDigit = 0;
;PCODE: $00000100 VOL: 0
; 0002 0060             speed = speed * 10 + (digit - '0');
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0002 0061         }
; 0002 0062         else if ((digit=='F') && speed>50){
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0002 0063             newDigit = 0;
;PCODE: $00000115 VOL: 0
; 0002 0064             lcd_clear();
;PCODE: $00000116 VOL: 0
; 0002 0065             lcd_puts(SPEED);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0002 0066             lcd_puts(Error);
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0002 0067             delay_ms(400);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0002 0068             lcd_clear();
;PCODE: $0000011F VOL: 0
; 0002 0069             lcd_puts(SPEED);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0002 006A             digit = '0';
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0002 006B             speed = 0;
;PCODE: $00000125 VOL: 0
; 0002 006C         }
; 0002 006D         else if ((digit=='F') && (speed>=0 && speed<=50))
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0002 006E             break;
;PCODE: $00000139 VOL: 0
; 0002 006F     }
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0002 0070     // Time -------------------------------------
; 0002 0071     newDigit = 0;
;PCODE: $0000013F VOL: 0
; 0002 0072     digit = '0';
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0002 0073     lcd_clear();
;PCODE: $00000142 VOL: 0
; 0002 0074     lcd_puts(TIME);
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0002 0075     time = 0;
;PCODE: $00000146 VOL: 0
; 0002 0076     while(1){
;PCODE: $00000147 VOL: 0
; 0002 0077         if((digit!='F') && newDigit){
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0002 0078             newDigit = 0;
;PCODE: $00000151 VOL: 0
; 0002 0079             time = time * 10 + (digit - '0');
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0002 007A         }
; 0002 007B         else if ((digit=='F') && time>99){
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0002 007C             newDigit = 0;
;PCODE: $00000166 VOL: 0
; 0002 007D             lcd_clear();
;PCODE: $00000167 VOL: 0
; 0002 007E             lcd_puts(TIME);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0002 007F             lcd_puts(Error);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0002 0080             delay_ms(400);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0002 0081             lcd_clear();
;PCODE: $00000170 VOL: 0
; 0002 0082             lcd_puts(TIME);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0002 0083             digit = '0';
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0002 0084             time = 0;
;PCODE: $00000176 VOL: 0
; 0002 0085         }
; 0002 0086         else if ((digit=='F') && (time>=0 && time<=99))
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0002 0087             break;
;PCODE: $0000018A VOL: 0
; 0002 0088     }
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0002 0089     // Weigt ------------------------------------
; 0002 008A     newDigit = 0;
;PCODE: $00000190 VOL: 0
; 0002 008B     digit = '0';
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0002 008C     lcd_clear();
;PCODE: $00000193 VOL: 0
; 0002 008D     lcd_puts(WEIGT);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0002 008E     weigt = 0;
;PCODE: $00000197 VOL: 0
; 0002 008F     while(1){
;PCODE: $00000198 VOL: 0
; 0002 0090         if((digit!='F') && newDigit){
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0002 0091             newDigit = 0;
;PCODE: $000001A2 VOL: 0
; 0002 0092             weigt = weigt * 10 + (digit - '0');
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0002 0093         }
; 0002 0094         else if ((digit=='F') && weigt>99){
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0002 0095             newDigit = 0;
;PCODE: $000001B7 VOL: 0
; 0002 0096             lcd_clear();
;PCODE: $000001B8 VOL: 0
; 0002 0097             lcd_puts(WEIGT);
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0002 0098             lcd_puts(Error);
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0002 0099             delay_ms(400);
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0002 009A             lcd_clear();
;PCODE: $000001C1 VOL: 0
; 0002 009B             lcd_puts(WEIGT);
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0002 009C             digit = '0';
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0002 009D             weigt = 0;
;PCODE: $000001C7 VOL: 0
; 0002 009E         }
; 0002 009F         else if ((digit=='F') && (weigt>=0 && weigt<=99))
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0002 00A0             break;
;PCODE: $000001DB VOL: 0
; 0002 00A1     }
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0002 00A2     // Temp -------------------------------------
; 0002 00A3     newDigit = 0;
;PCODE: $000001E1 VOL: 0
; 0002 00A4     digit = '0';
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0002 00A5     lcd_clear();
;PCODE: $000001E4 VOL: 0
; 0002 00A6     lcd_puts(TEMP);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0002 00A7     temp = 0;
;PCODE: $000001E8 VOL: 0
; 0002 00A8     while(1){
;PCODE: $000001E9 VOL: 0
; 0002 00A9         if((digit!='F') && newDigit){
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0002 00AA             newDigit = 0;
;PCODE: $000001F3 VOL: 0
; 0002 00AB             temp = temp * 10 + (digit - '0');
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0002 00AC         }
; 0002 00AD         else if ((digit=='F') && (temp<20 || temp>80)){
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0002 00AE             newDigit = 0;
;PCODE: $0000020D VOL: 0
; 0002 00AF             lcd_clear();
;PCODE: $0000020E VOL: 0
; 0002 00B0             lcd_puts(TEMP);
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0002 00B1             lcd_puts(Error);
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0002 00B2             delay_ms(400);
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0002 00B3             lcd_clear();
;PCODE: $00000217 VOL: 0
; 0002 00B4             lcd_puts(TEMP);
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0002 00B5             digit = '0';
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0002 00B6             temp = 0;
;PCODE: $0000021D VOL: 0
; 0002 00B7         }
; 0002 00B8         else if ((digit=='F') && (temp>=20 && temp<=80))
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0002 00B9             break;
;PCODE: $00000231 VOL: 0
; 0002 00BA     }
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0002 00BB     // Final ------------------------------------
; 0002 00BC     sprintf(result,
; 0002 00BD             "Speed:%2d Time:%2d Weigt:%2d Temp:%2d",
; 0002 00BE             speed,time,weigt,temp);
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0002 00BF 
; 0002 00C0 }
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0

	.DSEG
_0x40020:
	.BYTE 0xD5
