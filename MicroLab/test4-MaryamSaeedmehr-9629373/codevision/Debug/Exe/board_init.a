;#include "test4_lib.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void io_init(){
; 0001 0003 void io_init(){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0004     // Input/Output Ports initialization
; 0001 0005     // Port A initialization
; 0001 0006     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0007     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0008     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0009     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 000A 
; 0001 000B     // Port B initialization
; 0001 000C     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 000D     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 000E     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 000F     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 0010 
; 0001 0011     // Port C initialization
; 0001 0012     // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0001 0013     DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0014     // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0001 0015     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 0016 
; 0001 0017     // Port D initialization
; 0001 0018     // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0019     DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 001A     // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 001B     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 001C }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;void timer_init(){
; 0001 001E void timer_init(){
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 001F     // Timer/Counter 0 initialization
; 0001 0020     // Clock source: System Clock
; 0001 0021     // Clock value: 125.000 kHz
; 0001 0022     // Mode: Normal top=0xFF
; 0001 0023     // OC0 output: Disconnected
; 0001 0024     // Timer Period: 1 ms
; 0001 0025     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0026     TCNT0=0x83;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0027     OCR0=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0028 
; 0001 0029     // Timer/Counter 1 initialization
; 0001 002A     // Clock source: System Clock
; 0001 002B     // Clock value: 8000.000 kHz
; 0001 002C     // Mode: Normal top=0xFFFF
; 0001 002D     // OC1A output: Toggle on compare match
; 0001 002E     // OC1B output: Toggle on compare match
; 0001 002F     // Noise Canceler: Off
; 0001 0030     // Input Capture on Falling Edge
; 0001 0031     // Timer Period: 5 ms
; 0001 0032     // Output Pulse(s):
; 0001 0033     // OC1A Period: 10 ms Width: 5 ms
; 0001 0034     // OC1B Period: 10 ms Width: 5 ms
; 0001 0035     // Timer1 Overflow Interrupt: On
; 0001 0036     // Input Capture Interrupt: Off
; 0001 0037     // Compare A Match Interrupt: Off
; 0001 0038     // Compare B Match Interrupt: Off
; 0001 0039     TCCR1A=(0<<COM1A1) | (1<<COM1A0) | (0<<COM1B1) | (1<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 003A     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 003B     TCNT1H=0x63;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 003C     TCNT1L=0xC0;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 003D     ICR1H=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 003E     ICR1L=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0001 003F     OCR1AH=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 0040     OCR1AL=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0001 0041     OCR1BH=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 0042     OCR1BL=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0001 0043 
; 0001 0044     // Timer/Counter 2 initialization
; 0001 0045     // Clock source: System Clock
; 0001 0046     // Clock value: Timer2 Stopped
; 0001 0047     // Mode: Normal top=0xFF
; 0001 0048     // OC2 output: Disconnected
; 0001 0049     ASSR=0<<AS2;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 004A     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 004B     TCNT2=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0001 004C     OCR2=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0001 004D 
; 0001 004E     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0001 004F     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 0050 }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;
;void interrupt_init(){
; 0001 0052 void interrupt_init(){
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 0053     // External Interrupt(s) initialization
; 0001 0054     // INT0: On
; 0001 0055     // INT0 Mode: Falling Edge
; 0001 0056     // INT1: On
; 0001 0057     // INT1 Mode: Falling Edge
; 0001 0058     // INT2: On
; 0001 0059     // INT2 Mode: Falling Edge
; 0001 005A     GICR|=(1<<INT1) | (1<<INT0) | (1<<INT2);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0001 005B     MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0001 005C     MCUCSR=(0<<ISC2);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0001 005D     GIFR=(1<<INTF1) | (1<<INTF0) | (1<<INTF2);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 005E }
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;
;void lcd_puts_init(){
; 0001 0060 void lcd_puts_init(){
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0001 0061     sprintf(LCD_line2_parking_template,
; 0001 0062             "CE:%4d**", maxParkingCapacuty);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0063     sprintf(LCD_line1_template,
; 0001 0064             "%2d:%2d:%2d:%2d", 0,0,0,0);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0001 0065     sprintf(LCD_line2_period_template, "%4dMS0", 10);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0001 0066     lcd_clear();
;PCODE: $0000007F VOL: 0
; 0001 0067     lcd_gotoxy(line1x, line1y);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0001 0068     lcd_puts(LCD_line1_template);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0001 0069     lcd_gotoxy(line2x, line2y);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0001 006A     lcd_puts(LCD_line2_parking_template);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0001 006B     lcd_puts(LCD_line2_period_template);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0001 006C }
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;
;void board_init(){
; 0001 006E void board_init(){
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0001 006F     io_init();
;PCODE: $00000092 VOL: 0
; 0001 0070     timer_init();
;PCODE: $00000093 VOL: 0
; 0001 0071     interrupt_init();
;PCODE: $00000094 VOL: 0
; 0001 0072 
; 0001 0073     // Alphanumeric LCD initialization
; 0001 0074     // Connections are specified in the
; 0001 0075     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0001 0076     // RS - PORTC Bit 0
; 0001 0077     // RD - PORTC Bit 1
; 0001 0078     // EN - PORTC Bit 2
; 0001 0079     // D4 - PORTC Bit 4
; 0001 007A     // D5 - PORTC Bit 5
; 0001 007B     // D6 - PORTC Bit 6
; 0001 007C     // D7 - PORTC Bit 7
; 0001 007D     // Characters/line: 16
; 0001 007E     lcd_init(16);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0001 007F     lcd_puts_init();
;PCODE: $00000097 VOL: 0
; 0001 0080 }
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
